/* You can add global styles to this file, and also import other style files */

// @import "../node_modules/@angular/material/prebuilt-themes/indigo-pink.css";

@use 'sass:map';
@use "~@angular/material" as mat;

@include mat.core();

$light-theme: mat.define-light-theme(
    (
        color: (
            primary: mat.define-palette(mat.$indigo-palette),
            accent: mat.define-palette(mat.$pink-palette),
        ),
    )
);

// Define a dark theme
$dark-theme: mat.define-dark-theme(
    (
        color: (
            primary: mat.define-palette(mat.$purple-palette, 700, 500, 800),
            accent: mat.define-palette(mat.$green-palette, A200, A100, A400),
        ),
    )
);

// Emit theme-dependent styles for common features used across multiple components.
// @include mat.core-theme($light-theme);

// Emit styles for MatButton based on `$light-theme`. Because the configuration
// passed to `define-light-theme` omits typography, `button-theme` will not
// emit any typography styles.
// @include mat.button-theme($light-theme);
// APPLY STYLES FOR EACH ANGULAR MATERIAL COMPONENT

// Apply the dark theme by default
@include mat.all-component-themes($dark-theme);

// Apply the light theme only when the `.my-light-theme` CSS class is applied
// to an ancestor element of the components (such as `body`).
.light-theme {
    @include mat.all-component-themes($light-theme);
}


$color-config: mat.get-color-config($light-theme);
$primary-palette: map.get($color-config, 'primary');

body {
    margin: 0;
    padding: 0;
}

:root {
    --100: #{mat.get-color-from-palette(mat.$indigo-palette, 100)};
    --200: #{mat.get-color-from-palette(mat.$indigo-palette, 200)};
    --300: #{mat.get-color-from-palette(mat.$indigo-palette, 300)};
}